<?php

/*
 * This file is part of the Active Collab Authentication project.
 *
 * (c) A51 doo <info@activecollab.com>. All rights reserved.
 */

namespace ActiveCollab\Shepherd\Test\Authentication;

use ActiveCollab\Authentication\Saml\SamlUtils;
use ActiveCollab\Authentication\Test\TestCase\TestCase;
use LightSaml\Model\Protocol\Response;

class SamlUtilsTest extends TestCase
{
    /**
     * @var SamlUtils
     */
    private $saml_utils;

    /**
     * @var array
     */
    private $raw_saml_response;

    protected function setUp()
    {
        parent::setUp();

        $this->saml_utils = new SamlUtils();
        $this->raw_saml_response = ['SAMLResponse' => 'PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxzYW1scDpSZXNwb25zZSB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIiBJRD0iX2IxOTEwYmIwMzY5NDQ4MDNhNWRlMDllNTQ5ZjA3MmJhYjIwODdiOTVjZiIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMTYtMTEtMTVUMDk6NTU6MDVaIiBEZXN0aW5hdGlvbj0iaHR0cDovL2xvY2FsaG9zdDo4ODg3L2FwaS92MS91c2VyLXNlc3Npb24iPjxzYW1sOklzc3VlciB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj5odHRwOi8vbG9jYWxob3N0Ojg4ODcvcHJvamVjdHM8L3NhbWw6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogIDxkczpTaWduZWRJbmZvPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+CiAgICA8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIi8+CiAgPGRzOlJlZmVyZW5jZSBVUkk9IiNfYjE5MTBiYjAzNjk0NDgwM2E1ZGUwOWU1NDlmMDcyYmFiMjA4N2I5NWNmIj48ZHM6VHJhbnNmb3Jtcz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9kczpUcmFuc2Zvcm1zPjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSIvPjxkczpEaWdlc3RWYWx1ZT40RGhLUHBsdEtDVlhyNGY2OFBmbGg4Ty9NOXM9PC9kczpEaWdlc3RWYWx1ZT48L2RzOlJlZmVyZW5jZT48L2RzOlNpZ25lZEluZm8+PGRzOlNpZ25hdHVyZVZhbHVlPlJlT2ovbEV6aUFzd0pRY2ZDVEFjMnFiblpLUytPYVlQVzJ1aHVRb2FlWDNuMWJtcFFlZzJKeU53R0dxaUd3SVk3QnBTemgwQUR4aHBmUlhKMTBnbE1CaE1mVWZycFM3eExibzZVOGlLUDhmMENRQm13RnZZWGlTZGtFWDVsYjJGRjRuRjRvUzh1UlZWRytQamMvSFZiQk5ydDFoODRsdFNhN3AydmZIN25rWGRGYjdkSFA4UUVJRTFjRTNsbTF5TzBuRktrbkpsc1V3QkQvMUZtUUNGQVBwSThwWlpUSWJuL0hNaU95QTlWVTRDV203MDRYeXNPZytGQkNkU3pEQnNsc1ZOS1QvTUdoKzVtM2dCaGxESXpmeS9Mdmc0aXdiRVlXN095bHFmNTFiL244NTh6Q2t6YzlZWnQwSm9SVmxLU2RzZzA5UU1xQlZYYW9obWRhaGlmZz09PC9kczpTaWduYXR1cmVWYWx1ZT4KPGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJRHlqQ0NBcktnQXdJQkFnSUpBSk5PRnVRZDcyN2NNQTBHQ1NxR1NJYjNEUUVCQlFVQU1Fd3hDekFKQmdOVkJBWVRBbEpUTVJFd0R3WURWUVFJRXdoQ1pXeG5jbUZrWlRFU01CQUdBMVVFQ2hNSlRHbG5hSFJUUVUxTU1SWXdGQVlEVlFRREV3MXNhV2RvZEhOaGJXd3VZMjl0TUI0WERURTFNRGt4TXpFNU1ERTBNRm9YRFRJMU1Ea3hNREU1TURFME1Gb3dUREVMTUFrR0ExVUVCaE1DVWxNeEVUQVBCZ05WQkFnVENFSmxiR2R5WVdSbE1SSXdFQVlEVlFRS0V3bE1hV2RvZEZOQlRVd3hGakFVQmdOVkJBTVREV3hwWjJoMGMyRnRiQzVqYjIwd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM3cFVLT1BNeUUyb1NjSExQR0pGVGVwSzlqMUgwM2Uvcy9Xbk9Odzhad1lCYUJJWUlRdVg2dUU4akZQZEQwdVFTYVlwT3c1aDVUZ3E2eEJWN20ya1BPNTNoczhnRUdXUmJDZEN0eGk5RU1Kd0lPWXIraXNHME4rRHZWOUt5YkpmNnRxY001MFBpRmpWTnRmeDhJdWJNcEFLQ2JxdWFxZExhSEgwcmdQMWhiZ25HbTVZWmt5RUs0czh4dUxVRFM2cUw3TjdhL2V6MlprNDV1M0wzcUZjdW5jUEk1QlRuSmc2ZnFseXBEaENET0JJNUxqdzEwSG1nWkhQSVh6T2hFUFZWK3JYMmlIaEY0Vjl2ekVvZUlVQUJZWFFWTlJSTkhwUGRWc0s2aVRUa3l2YnJHSi90djNvRlpoTk9TTDBLdXkrUTlubEU5ZkVGcXlVeWRKNjd2c1hxWkFnTUJBQUdqZ2E0d2dhc3dIUVlEVlIwT0JCWUVGSFBUNkV5MXFneE16TUl0MmQzT1d1d3pmUFNVTUh3R0ExVWRJd1IxTUhPQUZIUFQ2RXkxcWd4TXpNSXQyZDNPV3V3emZQU1VvVkNrVGpCTU1Rc3dDUVlEVlFRR0V3SlNVekVSTUE4R0ExVUVDQk1JUW1Wc1ozSmhaR1V4RWpBUUJnTlZCQW9UQ1V4cFoyaDBVMEZOVERFV01CUUdBMVVFQXhNTmJHbG5hSFJ6WVcxc0xtTnZiWUlKQUpOT0Z1UWQ3MjdjTUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVGQlFBRGdnRUJBSGtIdHdKQm9lT2h2cjA2TTBNaWtLYzk5emU2VHFBR3ZmK1FrZ0ZvVjFzV0dBaDNOS2NBUitYU2xmSytzUVdySEdraWlhNWhXS2dBUE1NVWJrTFA5REZXa2piSzI0MWlzQ1paRC9MdkExYW5iVis3UGlkbitzd1o1ZFI3eW5YMnZqMGtGWWIrVnNHUGthdk5jajhSTi9EZHVoTi9UbWk1c1FBbFdoYXcwNlVBZUVxWHRGZUxiVGdMZmZCYWo3UG1SMElZanZUWkEwWDJGZFJ1MEdYUnhuN3pnaGpwdlNxOW51V2EzcEdiZmRWdEw2R0lrd1lVUGNEempyNE9lR1hObUlaZS93TUNuejZWR1pZK0xVZ3ppLzREQUM2VjNPak11aGRxUy8yK28xK0NYQ3dOMDhDSUhRVjYrQVVCZW5FVmF3TXNpYWRMQmd4M2tGZTVpWHJZUk1BPTwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE+PC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPjxBc3NlcnRpb24geG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIElEPSJfY2ViODYyMDg3ODE4NjY1ZjAzOTM3ZDMxODBlNzhiZGNlM2VjYTAwYWQ0IiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAxNi0xMS0xNVQwOTo1NTowNVoiPjxJc3N1ZXI+aHR0cDovL2xvY2FsaG9zdDo4ODg3L3Byb2plY3RzPC9Jc3N1ZXI+PFN1YmplY3Q+PE5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMTpuYW1laWQtZm9ybWF0OmVtYWlsQWRkcmVzcyI+b3duZXJAY29tcGFueS5jb208L05hbWVJRD48U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPjxTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89ImlkX29mX3RoZV9hdXRobl9yZXF1ZXN0IiBOb3RPbk9yQWZ0ZXI9IjIwMTYtMTEtMTVUMDk6NTY6MDVaIiBSZWNpcGllbnQ9Imh0dHA6Ly9sb2NhbGhvc3Q6ODg4Ny9hcGkvdjEvdXNlci1zZXNzaW9uIi8+PC9TdWJqZWN0Q29uZmlybWF0aW9uPjwvU3ViamVjdD48Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMTYtMTEtMTVUMDk6NTU6MDVaIiBOb3RPbk9yQWZ0ZXI9IjIwMTYtMTEtMTVUMDk6NTY6MDVaIj48QXVkaWVuY2VSZXN0cmljdGlvbj48QXVkaWVuY2U+aHR0cDovL2xvY2FsaG9zdDo4ODg3L2FwaS92MS91c2VyLXNlc3Npb248L0F1ZGllbmNlPjwvQXVkaWVuY2VSZXN0cmljdGlvbj48L0NvbmRpdGlvbnM+PEF0dHJpYnV0ZVN0YXRlbWVudD48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2VtYWlsYWRkcmVzcyI+PEF0dHJpYnV0ZVZhbHVlPm93bmVyQGNvbXBhbnkuY29tPC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48L0F0dHJpYnV0ZVN0YXRlbWVudD48QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDE2LTExLTE1VDA5OjQ1OjA1WiIgU2Vzc2lvbkluZGV4PSJfc29tZV9zZXNzaW9uX2luZGV4Ij48QXV0aG5Db250ZXh0PjxBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZFByb3RlY3RlZFRyYW5zcG9ydDwvQXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9BdXRobkNvbnRleHQ+PC9BdXRoblN0YXRlbWVudD48L0Fzc2VydGlvbj48L3NhbWxwOlJlc3BvbnNlPgo='];
    }

    public function testAuthnRequest()
    {
        $result = $this->saml_utils->getAuthnRequest(
            'http://localhost/consumer',
            'http://localhost/idp',
            'http://localhost/issuer',
            file_get_contents(__DIR__ . '/../Fixtures/saml.crt'),
            file_get_contents(__DIR__ . '/../Fixtures/saml.key')
        );

        $this->assertStringStartsWith('http://localhost/idp?SAMLRequest=', $result);
    }

    public function testParseSamlResponse()
    {
        $parsed_response = $this->saml_utils->parseSamlResponse($this->raw_saml_response);

        $this->assertInstanceOf(Response::class, $parsed_response);
    }

    public function testEmailAddress()
    {
        $parsed_response = $this->saml_utils->parseSamlResponse($this->raw_saml_response);

        $email = $this->saml_utils->getEmailAddress($parsed_response);

        $this->assertSame('owner@company.com', $email);
    }

    public function testIssuerUrl()
    {
        $parsed_response = $this->saml_utils->parseSamlResponse($this->raw_saml_response);

        $url = $this->saml_utils->getIssuerUrl($parsed_response);

        $this->assertSame('http://localhost:8887/projects', $url);
    }
}
